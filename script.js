// script.js
import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
import { getDatabase, ref, push, onValue, remove, update, set } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-database.js";

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
    apiKey: "AIzaSyBRmKbekcv6OW8oaMsHPlc8WvfIWnyFAI0",
    authDomain: "appgamesrepo.firebaseapp.com",
    databaseURL: "https://appgamesrepo-default-rtdb.firebaseio.com",
    projectId: "appgamesrepo",
    storageBucket: "appgamesrepo.appspot.com",
    messagingSenderId: "220298514248",
    appId: "1:220298514248:web:f3193a6042d3e1a67a6d7d",
    measurementId: "G-0YVBYHKG2D"
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
const form = document.getElementById('appForm');
const output = document.getElementById('appsList');
const repoSelect = document.getElementById('repoType');
const tokenOutput = document.getElementById('tokenOutput');
const vipExpireDateInput = document.getElementById('vipExpireDate');
const generateVipTokenButton = document.getElementById('generateVipTokenButton');
const appSearchInput = document.getElementById('appSearchInput');

let editKey = null; // –ö–ª—é—á –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentApps = []; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –∏—Ö —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏

// --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ ---

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ Firebase
function loadApps() {
    const repo = repoSelect.value;
    const appsPath = `${repo}/apps`;

    onValue(ref(db, appsPath), (snapshot) => {
        output.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
        currentApps = []; // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º

        if (!snapshot.exists()) {
            output.innerHTML = `<p>–ù–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ —ç—Ç–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.</p>`;
            return;
        }

        snapshot.forEach(child => {
            const appData = child.val();
            currentApps.push({ key: child.key, ...appData });
        });
        filterAndDisplayApps(); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    }, (error) => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:", error);
        output.innerHTML = `<p class="error-message">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</p>`;
    });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
function filterAndDisplayApps() {
    output.innerHTML = `<h2>üì± ${repoSelect.value === 'vipApps' ? 'VIP' : '–û–±—ã—á–Ω—ã–µ'} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>`;
    output.innerHTML += `<p><small>–ü—É—Ç—å: ${repoSelect.value}/apps</small></p>`;
    output.innerHTML += `<hr>`;

    const searchTerm = appSearchInput.value.toLowerCase();
    const filteredApps = currentApps.filter(app =>
        app.name.toLowerCase().includes(searchTerm) ||
        app.bundleID.toLowerCase().includes(searchTerm)
    );

    if (filteredApps.length === 0) {
        output.innerHTML += `<p>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>`;
        return;
    }

    filteredApps.forEach(app => {
        const appDiv = document.createElement('div');
        appDiv.className = 'appCard';
        appDiv.innerHTML = `
            <img src="${app.iconURL || 'placeholder.png'}" alt="${app.name} icon">
            <div class="app-info">
                <strong>${app.name}</strong> (${app.version})<br>
                <small>${app.bundleID}</small>
            </div>
            <div class="app-actions">
                <button class="editBtn" data-id="${app.key}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                <button class="deleteBtn" data-repo="${repoSelect.value}" data-id="${app.key}">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
        output.appendChild(appDiv);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
        appDiv.querySelector('.editBtn').addEventListener('click', () => {
            editApp(app.key, app);
        });
        appDiv.querySelector('.deleteBtn').addEventListener('click', (e) => {
            const repo = e.target.dataset.repo;
            const id = e.target.dataset.id;
            if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "${app.name}"?`)) {
                deleteApp(repo, id);
            }
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function editApp(key, app) {
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    form.name.value = app.name;
    form.bundleID.value = app.bundleID;
    form.version.value = app.version;
    form.size.value = app.size;
    form.downloadURL.value = app.downloadURL;
    // –î–æ–±–∞–≤–ª—è–µ–º ?raw=true –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    form.iconURL.value = app.iconURL.endsWith('?raw=true') ? app.iconURL : app.iconURL + '?raw=true';
    form.description.value = app.localizedDescription;
    editKey = key; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ
    form.scrollIntoView({ behavior: 'smooth' });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function deleteApp(repo, key) {
    try {
        await remove(ref(db, `${repo}/apps/${key}`));
        alert('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!');
        loadApps(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", error);
        alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`);
    }
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
repoSelect.addEventListener('change', () => {
    loadApps();
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const iconUrlValue = form.iconURL.value;
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ?raw=true –¥–ª—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏–∫–æ–Ω–∫–∏ GitHub
    const finalIconURL = iconUrlValue.includes('github.com') && !iconUrlValue.endsWith('?raw=true')
        ? iconUrlValue + '?raw=true'
        : iconUrlValue;

    const appData = {
        name: form.name.value,
        type: 1, // –ò–ª–∏ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        bundleID: form.bundleID.value,
        bundleIdentifier: form.bundleID.value, // –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        version: form.version.value,
        size: parseInt(form.size.value),
        down: form.downloadURL.value, // –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        downloadURL: form.downloadURL.value,
        developerName: "", // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–æ
        localizedDescription: form.description.value,
        icon: finalIconURL, // –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        iconURL: finalIconURL,
        appUpdateTime: new Date().toISOString()
    };

    const repo = repoSelect.value;
    const path = `${repo}/apps`;

    try {
        if (editKey) {
            await update(ref(db, `${path}/${editKey}`), appData);
            alert('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
            editKey = null; // –°–±—Ä–æ—Å —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        } else {
            await push(ref(db, path), appData);
            alert('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
        }
        form.reset(); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        loadApps(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:", error);
        alert(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`);
    }
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è VIP —Ç–æ–∫–µ–Ω–∞
generateVipTokenButton.addEventListener('click', async () => {
    const expireDateValue = vipExpireDateInput.value;
    if (!expireDateValue) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è VIP —Ç–æ–∫–µ–Ω–∞.');
        return;
    }

    const token = Math.random().toString(36).substring(2, 12); // –°–ª—É—á–∞–π–Ω—ã–π 10-—Å–∏–º–≤–æ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
    const expireDate = new Date(expireDateValue).toISOString();

    try {
        await set(ref(db, `vipTokens/${token}`), {
            createdAt: new Date().toISOString(),
            expiresAt: expireDate
        });

        tokenOutput.innerHTML = `
            <h3>‚úÖ VIP —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω</h3>
            <p><b>üîë –¢–æ–∫–µ–Ω:</b> <code>${token}</code></p>
            <p><b>üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç:</b> ${new Date(expireDate).toLocaleString()}</p>
            <p><b>üì• GBox JSON:</b></p>
            <textarea readonly onclick="this.select()" style="width:100%; height:55px; font-size:13px;">
https://api-u3vwde53ja-uc.a.run.app/vipRepo.json?token=${token}
            </textarea>
            <p><small>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏–ª–∏ –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è GBox JSON.</small></p>
        `;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VIP —Ç–æ–∫–µ–Ω–∞:", error);
        tokenOutput.innerHTML = `<p class="error-message">–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞: ${error.message}</p>`;
    }
});

// –ü–æ–∏—Å–∫ –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
appSearchInput.addEventListener('input', filterAndDisplayApps);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    loadApps();
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É + 1 –º–µ—Å—è—Ü –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è VIP —Ç–æ–∫–µ–Ω–∞
    const now = new Date();
    now.setMonth(now.getMonth() + 1);
    vipExpireDateInput.value = now.toISOString().substring(0, 16);
});

// –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ deleteApp, –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ HTML –Ω–∞–ø—Ä—è–º—É—é (—Ö–æ—Ç—è –ª—É—á—à–µ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏—è)
window.deleteApp = deleteApp;
